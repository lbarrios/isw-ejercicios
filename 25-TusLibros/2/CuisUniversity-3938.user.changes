

----STARTUP---- (6 November 2019 15:40:53) as /home/lbarrios/cuis_university/5.0-3938/CuisUniversity-3938.image!


----End fileIn of /home/lbarrios/facultad/isw-ejercicios/25-TusLibros/2/TusLibros.st----!

----SNAPSHOT----(6 November 2019 15:42:02) CuisUniversity-3938.image priorSource: 14319118!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'LEB 11/6/2019 15:42:04'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'LEB 11/6/2019 15:42:04'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'LEB 11/6/2019 15:42:04'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'LEB 11/6/2019 15:42:04'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'LEB 11/6/2019 15:42:04'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'LEB 11/6/2019 15:42:04'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'LEB 11/6/2019 15:42:04'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'LEB 11/6/2019 15:42:04'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:42:06'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 15:42:06'!
PASSED!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 15:42:06'!
PASSED!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 15:42:06'!
PASSED!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 15:42:06'!
PASSED!

Object subclass: #CreditCard
	instanceVariableNames: 'expired number expiration owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: #TusLibros stamp: 'LEB 11/6/2019 15:42:26'!
Object subclass: #CreditCard
	instanceVariableNames: 'expired number expiration owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TestTusLibros methodsFor: 'support' stamp: 'LEB 11/6/2019 15:44:49' prior: 50777406!
validCreditCard
	"withNumber: aNumber expiringOn: aMonthOfYear ownedBy: aName"
	^CreditCard withNumber: 1 expiringOn: 0 ownedBy: 'Wilki'.! !

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:44:56'!
ERROR!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 15:44:56'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 15:44:56'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 15:44:56'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 15:44:56'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:45:04'!
ERROR!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 15:45:04'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 15:45:04'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 15:45:04'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 15:45:04'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:45:06'!
ERROR!
!CreditCard class methodsFor: 'instance creation' stamp: 'LEB 11/6/2019 15:45:18'!
withNumber: aSmallInteger expiringOn: aSmallInteger2 ownedBy: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithNumber: aSmallInteger expiringOn: aSmallInteger2 ownedBy: aString ! !
!CreditCard class methodsFor: 'instance creation' stamp: 'LEB 11/6/2019 15:45:41' prior: 50777942!
withNumber: aNumber expiringOn: aMonthOfYear ownedBy: aName
	^self new initializeWithNumber: aNumber expiringOn: aMonthOfYear ownedBy: aName! !

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:46:17'!
ERROR!

!classDefinition: #CreditCard category: #TusLibros stamp: 'LEB 11/6/2019 15:46:36'!
Object subclass: #CreditCard
	instanceVariableNames: 'expired number expiration owner monthOfYear'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: #TusLibros stamp: 'LEB 11/6/2019 15:46:36'!
Object subclass: #CreditCard
	instanceVariableNames: 'expired number expiration owner monthOfYear name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'LEB 11/6/2019 15:46:36'!
initializeWithNumber: aNumber expiringOn: aMonthOfYear ownedBy: aName 
	self shouldBeImplemented.
	number := aNumber.
	monthOfYear := aMonthOfYear.
	name := aName.! !
!CreditCard methodsFor: 'initialization' stamp: 'LEB 11/6/2019 15:46:43' prior: 50777980!
initializeWithNumber: aNumber expiringOn: aMonthOfYear ownedBy: aName 
	number := aNumber.
	monthOfYear := aMonthOfYear.
	name := aName.! !

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:46:50'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 15:46:52'!
PASSED!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 15:46:54'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:46:56'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 15:46:56'!
PASSED!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 15:46:56'!
PASSED!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 15:46:56'!
PASSED!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 15:46:56'!
PASSED!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:47:25'!
isExpiredOn: aDate
^expired! !

!methodRemoval: CreditCard #isExpiredOn: stamp: 'LEB 11/6/2019 15:47:30'!
isExpiredOn: aDate
^expired!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:48:09'!
isExpired: aDate
^expired! !

!methodRemoval: CreditCard #isExpired stamp: 'LEB 11/6/2019 15:48:09'!
isExpired
^expired!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:48:23'!
isExpiredOn: aDate
^expired! !

!methodRemoval: CreditCard #isExpired: stamp: 'LEB 11/6/2019 15:48:40'!
isExpired: aDate
^expired!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:48:46'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 15:48:46'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 15:48:46'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 15:48:46'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 15:48:46'!
ERROR!
!Cashier methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:49:22' prior: 50777739!
checkOut
	| aTicket |
	cart isEmpty ifTrue: [self error: self invalidCartErrorMessage].
	(creditCard isExpiredOn: 1) ifTrue: [self error: self expiredCreditCardMessage].
	
	aTicket := cart getTicket.
	salesBook add: aTicket.
	^aTicket! !

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 15:49:26'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 15:49:26'!
PASSED!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 15:49:26'!
PASSED!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 15:49:26'!
PASSED!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 15:49:26'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'LEB 11/6/2019 15:49:28'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'LEB 11/6/2019 15:49:28'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'LEB 11/6/2019 15:49:28'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'LEB 11/6/2019 15:49:28'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'LEB 11/6/2019 15:49:28'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'LEB 11/6/2019 15:49:28'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'LEB 11/6/2019 15:49:28'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'LEB 11/6/2019 15:49:28'!
PASSED!

TestTusLibros subclass: #CreditCardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCardTest category: #TusLibros stamp: 'LEB 11/6/2019 15:49:41'!
TestTusLibros subclass: #CreditCardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCardTest methodsFor: 'nil' stamp: 'LEB 11/6/2019 15:51:04'!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:51:04'!
PASSED!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:51:04'!
PASSED!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:52:06' prior: 50778136!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard |
creditCard := CreditCard withNumber: 1 expiringOn: 2 ownedBy: 3.

self deny: creditCard isExpiredOn: 3.! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:52:25' prior: 50778151!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard |
creditCard := CreditCard withNumber: 1 expiringOn: 2 ownedBy: 3.

self deny: (creditCard isExpiredOn: 3).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:52:26'!
PASSED!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:52:26'!
PASSED!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:52:40' prior: 50778042!
isExpiredOn: aDate
^true! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:52:44'!
FAILURE!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:52:44'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:53:59' prior: 50778161!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: 2020 monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: aMonthOfYear - 1 day).! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:54:20' prior: 50778192!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: 2020 monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: Date today).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:54:21'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:55:01' prior: 50778205!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: 2020 monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: (Date year: 1 month: 1 day: 1)).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:55:02'!
FAILURE!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:56:00' prior: 50778179!
isExpiredOn: aDate
^ expiration > aDate.! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 15:56:02'!
ERROR!

!methodRemoval: CreditCard #initialize stamp: 'LEB 11/6/2019 15:56:52'!
initialize
expired := false.!

a := GregorianDate new.!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 15:58:12' prior: 50778222!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: 2020 monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: (GregorianDate year: 1 month: 1 day: 1)).! !

aMonthOfYear := GregorianMonthOfYear year: 2020 monthNumber: 6.!

GregorianDate year: 1 month: 1 day: 1.!

aDate := GregorianDate year: 1 month: 1 day: 1.!

aDate := FixedGregorianDate year: 1 month: 1 dayNumber: 1.!

aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.!

aDate < aMonthOfYear.!

aMonthOfYear > aDate.!

aMonthOfYear < aDate.!

aDate year.!

aMonthOfYear year.!

aDate distanceTo: aMonthOfYear.!

aDate2 := GregorianMonthOfYear year: aDate year monthNumber: aDate monthNumber.!

aDate2 := GregorianMonthOfYear year: aDate year monthNumber: aDate month.!

aDate2 := GregorianMonthOfYear year: aDate year monthNumber: aDate monthNumber.!

aDate2 := GregorianMonthOfYear year: aDate year monthNumber: aDate month number.!

aDate2 < aMonthOfYear.!

aDate2 < aMonthOfYear.!

aDate year!

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.!

aDate2 < aMonthOfYear.!

aMonthOfYear < aDate.!

aDate year.!

Year new: 1.!

Year.!

1*Year.!

Year yearNumber: 10.!

aDate year.!

Year yearNumber: 10.!

Year yearNumber: 1 = aDate year.!

Year yearNumber: 1!

(Year yearNumber: 1) = aDate year.!

aDate year.!

(Year yearNumber: 1) = aDate year.!

(Year number: 1) = aDate year.!

(GregorianYear number: 1) = aDate year.!

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.!

aMonthOfYear < aDate.!

aDate < aMonthOfYear.!

aMonthOfYear < aDate.!

aMonthOfYear = aDate.!

aMonthOfYear < aDate or: aMonthOfYear < aDate.!

(aMonthOfYear < aDate or: aMonthOfYear < aDate) not.!

(aMonthOfYear < aDate or: aMonthOfYear = aDate) not.!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:16:03' prior: 50778240!
isExpiredOn: aDate
^ (expiration < aDate or: expiration = aDate) not.
! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:16:08'!
ERROR!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:16:08'!
ERROR!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:16:35' prior: 50778253!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear year: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: (GregorianDate year: 1 month: 1 day: 1)).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:16:36'!
ERROR!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:16:53' prior: 50778332!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: (GregorianDate year: 1 month: 1 day: 1)).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:16:54'!
ERROR!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:17:11' prior: 50778351!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: (FixedGregorianDate year: 1 month: 1 day: 1)).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:17:12'!
ERROR!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:17:31' prior: 50778370!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: (FixedGregorianDate year: 1 month: 1 day: 1)).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:17:31'!
ERROR!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:17:48' prior: 50778389!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 3.

self deny: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1)).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:17:48'!
ERROR!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:18:21'!
ERROR!
!CreditCard methodsFor: 'initialization' stamp: 'LEB 11/6/2019 16:18:57' prior: 50777989!
initializeWithNumber: aNumber expiringOn: aMonthOfYear ownedBy: aName 
	number := aNumber.
	expiration := aMonthOfYear.
	name := aName.! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:19:01'!
FAILURE!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:19:01'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:19:31' prior: 50778408!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilki'.

self deny: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1)).! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:19:35' prior: 50778449!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self deny: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1)).! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:19:39'!
FAILURE!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:19:47'!
FAILURE!

(expiration < aDate or: expiration = aDate)!

(expiration < aDate or: expiration = aDate) not!

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.
!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:21:11' prior: 50778317!
isExpiredOn: aDate
^ (expiration < aDate or: expiration = aDate).
! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:21:13'!
PASSED!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:21:13'!
PASSED!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:21:31' prior: 50778464!
test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self deny: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1)).




































"
aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.
aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.
aDate2 < aMonthOfYear.

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.

aDate year.

(GregorianYear number: 1) = aDate year.
"! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:21:32'!
PASSED!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:21:32'!
PASSED!
!CreditCardTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:23:01'!
test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self deny: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1)).




































"
aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.
aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.
aDate2 < aMonthOfYear.

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.

aDate year.

(GregorianYear number: 1) = aDate year.
"! !
!CreditCardTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:23:09' prior: 50778544!
test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self assert: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 999999 monthNumber: 1 dayNumber: 1)).




































"
aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.
aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.
aDate2 < aMonthOfYear.

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.

aDate year.

(GregorianYear number: 1) = aDate year.
"! !

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:23:10'!
PASSED!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:23:10'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:23:10'!
PASSED!
!CreditCardTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:23:32' prior: 50778572!
test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self assert: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 2020 monthNumber: 6 dayNumber: 1)).




































"
aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.
aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.
aDate2 < aMonthOfYear.

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.

aDate year.

(GregorianYear number: 1) = aDate year.
"! !

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:23:33'!
FAILURE!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:24:30' prior: 50778493!
isExpiredOn: aDate
^ (expiration < aDate).
! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:24:34'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:24:34'!
FAILURE!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:24:34'!
FAILURE!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:24:38'!
FAILURE!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:24:38'!
FAILURE!
!CreditCardTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:25:01' prior: 50778614!
test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self assert: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 2020 monthNumber: 7 dayNumber: 1)).




































"
aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.
aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.
aDate2 < aMonthOfYear.

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.

aDate year.

(GregorianYear number: 1) = aDate year.
"! !

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:25:02'!
PASSED!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:25:02'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:25:02'!
PASSED!
!CreditCardTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:25:09'!
test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self assert: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 2020 monthNumber: 7 dayNumber: 1)).




































"
aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.
aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.
aDate2 < aMonthOfYear.

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.

aDate year.

(GregorianYear number: 1) = aDate year.
"! !

!methodRemoval: CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:25:11'!
test02creditCardIsExpiredWhenTheGivenDateIsGreaterOrEqualThanExpirationDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self assert: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 2020 monthNumber: 7 dayNumber: 1)).




































"
aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.
aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.
aDate2 < aMonthOfYear.

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.

aDate year.

(GregorianYear number: 1) = aDate year.
"!
!CreditCardTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:25:28'!
test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate
| creditCard aMonthOfYear |

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 2020) monthNumber: 6.
creditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.

self assert: (creditCard isExpiredOn: (FixedGregorianDate yearNumber: 2020 monthNumber: 6 dayNumber: 1)).




































"
aDate := FixedGregorianDate yearNumber: 1 monthNumber: 1 dayNumber: 1.
aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 6.

aDate2 := GregorianMonthOfYear year: aDate year number monthNumber: aDate month number.
aDate2 < aMonthOfYear.

(aMonthOfYear > aDate or: aMonthOfYear = aDate) not.

aDate year.

(GregorianYear number: 1) = aDate year.
"! !

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:25:32'!
PASSED!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:25:34'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:25:35'!
FAILURE!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:25:35'!
FAILURE!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:25:50' prior: 50778647!
isExpiredOn: aDate
^ (expiration < aDate) or: [expiration = aDate].
! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:25:56'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:25:56'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:25:56'!
FAILURE!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:25:56'!
FAILURE!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:25:59'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:26:01'!
FAILURE!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:26:01'!
FAILURE!

(GregorianYear number: 1) = aDate year.!

aDate year.!

aDate.!

aMonthOfYear = aDate!

aMonthOfYear = aDate.!

aMonthOfYear < aDate.!

aDate := FixedGregorianDate yearNumber: 3 monthNumber: 3 dayNumber: 3.!

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 3) monthNumber: 4.!

aMonthOfYear < aDate.!

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 3) monthNumber: 2.!

aMonthOfYear < aDate.!

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 3) monthNumber: 3.!

aMonthOfYear < aDate.!

aMonthOfYear = aDate.!

aMonthOfYear < aDate.!

aDate monthOfYear !

aMonthOfYear < aDate monthOfYear .!

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 3) monthNumber: 4.!

aMonthOfYear < aDate monthOfYear.!

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 3) monthNumber: 2.!

aMonthOfYear < aDate monthOfYear.!

aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 3) monthNumber: 3.!

aMonthOfYear < aDate monthOfYear.!

aDate monthOfYear < aMonthOfYear.!

(aDate monthOfYear < aMonthOfYear) not.!

(aDate monthOfYear < aMonthOfYear) not.!

(aDate monthOfYear < aMonthOfYear) not.!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:29:03' prior: 50778818!
isExpiredOn: aDate
^ (aDate monthOfYear < expiration) not.
! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:29:05'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:29:05'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:29:05'!
PASSED!

Object subclass: #CreditCard
	instanceVariableNames: 'number expiration owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: #TusLibros stamp: 'LEB 11/6/2019 16:29:26'!
Object subclass: #CreditCard
	instanceVariableNames: 'number expiration owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'LEB 11/6/2019 16:29:49' prior: 50778432!
initializeWithNumber: aNumber expiringOn: anExpirationMonthOfYear ownedBy: anOwnerName 
	number := aNumber.
	expiration := anExpirationMonthOfYear.
	owner := anOwnerName.! !
!CreditCard methodsFor: 'initialization' stamp: 'LEB 11/6/2019 16:30:03' prior: 50778921!
initializeWithNumber: aNumber expiringOn: anExpirationMonthOfYear ownedBy: anOwnerName 
	number := aNumber.
	expiration := anExpirationMonthOfYear.
	owner := anOwnerName.! !

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 16:30:05'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:30:05'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:30:05'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:30:05'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:30:05'!
ERROR!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:30:08'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:30:08'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:30:08'!
PASSED!
!TestTusLibros methodsFor: 'support' stamp: 'LEB 11/6/2019 16:33:32' prior: 50777388!
expiredCreditCard
	| aCreditCard aMonthOfYear |
	aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 0) monthNumber: 1.
	aCreditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.
	^aCreditCard.! !

!methodRemoval: CreditCard #expire stamp: 'LEB 11/6/2019 16:33:41'!
expire
expired := true.!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:33:57'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:33:57'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:33:57'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 16:33:59'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:33:59'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:33:59'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:33:59'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:33:59'!
ERROR!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:34:02'!
ERROR!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:34:02'!
ERROR!
!Cashier class methodsFor: 'instance creation' stamp: 'LEB 11/6/2019 16:35:08' prior: 50777765!
for: aCart on: aSalesBook with: aCreditCard
	
	^self new initializeFor: aCart on: aSalesBook with: aCreditCard.! !

1/1/1!

{1/1/1}!

{1\1\1}!
!Cashier class methodsFor: 'instance creation' stamp: 'LEB 11/6/2019 16:38:23'!
for: aCart on: aSalesBook with: aCreditCard onDate: aGregorianDate 
	
	^self new initializeFor: aCart on: aSalesBook with: aCreditCard.! !

!methodRemoval: Cashier class #for:on:with: stamp: 'LEB 11/6/2019 16:38:23'!
for: aCart on: aSalesBook with: aCreditCard
	
	^self new initializeFor: aCart on: aSalesBook with: aCreditCard.!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'LEB 11/6/2019 16:38:34'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'LEB 11/6/2019 16:38:34'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'LEB 11/6/2019 16:38:34'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'LEB 11/6/2019 16:38:34'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'LEB 11/6/2019 16:38:34'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'LEB 11/6/2019 16:38:34'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'LEB 11/6/2019 16:38:34'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'LEB 11/6/2019 16:38:34'!
PASSED!

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:38:36'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:38:36'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:38:36'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 16:38:38'!
ERROR!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:38:38'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:38:38'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:38:38'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:38:38'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:39:33' prior: 50777507!
test01cannotCheckOutEmptyCart

	| aCart aCashier aSalesBook aDate |
	
	aCart _ self createEmptyCartWithDefaultCatalog.
	aSalesBook := self defaultSalesBook.
	aDate := FixedGregorianDate yearNumber: 3 monthNumber: 3 dayNumber: 3.
	aCashier _ Cashier for: aCart on: aSalesBook with: self validCreditCard onDate: aDate.
	
	self 
		should: [aCashier checkOut ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier invalidCartErrorMessage.
			self assert: aCart isEmpty.
			self assert: aSalesBook isEmpty ]
	
	! !

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 16:39:53'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 16:39:53'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:39:53'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:39:53'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:39:53'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:39:53'!
ERROR!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 16:40:00'!
PASSED!
!CashierTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:40:53' prior: 50777525!
test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook

	| aCashier aSalesBook aTicket aCart aDate |
	aSalesBook _ self defaultSalesBook.
	aCart := self createEmptyCartWithDefaultCatalog add: self itemSellByTheStore.
	aDate := FixedGregorianDate yearNumber: 3 monthNumber: 3 dayNumber: 3.
	aCashier _ Cashier for: aCart on: aSalesBook with: self validCreditCard onDate: aDate.
	aTicket := aCashier checkOut.
	
	self deny: aSalesBook isEmpty.
	self assert: (aSalesBook includes: aTicket).! !

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:40:57'!
ERROR!
!Cashier class methodsFor: 'instance creation' stamp: 'LEB 11/6/2019 16:41:26' prior: 50779034!
for: aCart on: aSalesBook with: aCreditCard onDate: aGregorianDate 
	
	^self new initializeFor: aCart on: aSalesBook with: aCreditCard onDate: aGregorianDate.! !
!Cashier methodsFor: 'initialize' stamp: 'LEB 11/6/2019 16:41:39'!
initializeFor: aCart on: aSalesBook with: aCreditCard onDate: aGregorianDate
	
	cart := aCart.
	salesBook := aSalesBook.
	creditCard := aCreditCard.! !
!Cashier methodsFor: 'initialize' stamp: 'LEB 11/6/2019 16:41:47' prior: 50779185!
initializeFor: aCart on: aSalesBook with: aCreditCard onDate: aGregorianDate
	
	cart := aCart.
	salesBook := aSalesBook.
	creditCard := aCreditCard.! !

Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook creditCard date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: #TusLibros stamp: 'LEB 11/6/2019 16:42:13'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook creditCard date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'initialize' stamp: 'LEB 11/6/2019 16:42:24' prior: 50779193!
initializeFor: aCart on: aSalesBook with: aCreditCard onDate: aGregorianDate
	
	cart := aCart.
	salesBook := aSalesBook.
	creditCard := aCreditCard.
	date := aGregorianDate.! !

!methodRemoval: Cashier #initializeFor:on:with: stamp: 'LEB 11/6/2019 16:42:26'!
initializeFor: aCart on: aSalesBook with: aCreditCard .
	
	cart := aCart.
	salesBook := aSalesBook.
	creditCard := aCreditCard.!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:42:29'!
ERROR!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:42:29'!
ERROR!
!Cashier methodsFor: 'as yet unclassified' stamp: 'LEB 11/6/2019 16:42:48' prior: 50778069!
checkOut
	| aTicket |
	cart isEmpty ifTrue: [self error: self invalidCartErrorMessage].
	(creditCard isExpiredOn: date) ifTrue: [self error: self expiredCreditCardMessage].
	
	aTicket := cart getTicket.
	salesBook add: aTicket.
	^aTicket! !

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:42:51'!
ERROR!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:42:51'!
ERROR!
!TestTusLibros methodsFor: 'support' stamp: 'LEB 11/6/2019 16:44:12' prior: 50777892!
validCreditCard
	| aCreditCard aMonthOfYear |
	aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999) monthNumber: 12.
	aCreditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen2'.
	^aCreditCard.! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:44:16'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:44:16'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:44:16'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 16:44:19'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:44:19'!
PASSED!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:44:19'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:44:19'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:44:19'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:44:22'!
ERROR!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:44:22'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:44:26'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:44:26'!
ERROR!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:44:29'!
PASSED!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:44:31'!
ERROR!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:44:31'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:44:51' prior: 50777540!
test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue

	| aCart aCashier aTicket aDate |
	aCart _ self createEmptyCartWithDefaultCatalog.
	aCart add: self itemSellByTheStore.
	
	aDate := FixedGregorianDate yearNumber: 3 monthNumber: 3 dayNumber: 3.
	aCashier _ Cashier for: aCart on: self defaultSalesBook with: self validCreditCard onDate: aDate.
	aTicket := aCashier checkOut.
	
	self assert: (self defaultCatalog at: self itemSellByTheStore) equals: aTicket.
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	"
	NO CORREGIR LO SIGUIENTE:
	self assert: 1 equals: aTicket size.
	self assert: (aTicket at: 1) key key equals: self itemSellByTheStore.
	self assert: (aTicket at: 1) key value equals: 1.
	self assert: (aTicket at: 1) value equals: (self defaultCatalog at: self itemSellByTheStore).
	"! !
!CashierTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:45:00' prior: 50777570!
test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues

	| aCart aCashier aTicket aDate |
	aCart _ self createEmptyCartWithDefaultCatalog.
	aCart add: self itemSellByTheStore.
	aCart add: self itemSellByTheStore2.
	
	aDate := FixedGregorianDate yearNumber: 3 monthNumber: 3 dayNumber: 3.
	aCashier _ Cashier for: aCart on: self defaultSalesBook with: self validCreditCard onDate: aDate.
	aTicket := aCashier checkOut.
	
	self assert: (self defaultCatalog at: self itemSellByTheStore) + (self defaultCatalog at: self itemSellByTheStore2) equals: aTicket.
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	"
	NO CORREGIR LO SIGUIENTE:
	self assert: 1 equals: aTicket size.
	self assert: (aTicket at: 1) key key equals: self itemSellByTheStore.
	self assert: (aTicket at: 1) key value equals: 1.
	self assert: (aTicket at: 1) value equals: (self defaultCatalog at: self itemSellByTheStore).
	"! !

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:45:05'!
PASSED!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:45:06'!
PASSED!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:45:08'!
ERROR!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:45:08'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'LEB 11/6/2019 16:45:18' prior: 50777603!
test05cannotCheckoutWithAnExpiredCreditCard

	| aCart aCashier aDate |
	aCart _ self createEmptyCartWithDefaultCatalog.
	aCart add: self itemSellByTheStore.
	
	aDate := FixedGregorianDate yearNumber: 3 monthNumber: 3 dayNumber: 3.
	aCashier _ Cashier for: aCart on: self defaultSalesBook with: self expiredCreditCard onDate: aDate.
	self 
		should: [aCashier checkOut ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier expiredCreditCardMessage.
		]
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	"
	NO CORREGIR LO SIGUIENTE:
	self assert: 1 equals: aTicket size.
	self assert: (aTicket at: 1) key key equals: self itemSellByTheStore.
	self assert: (aTicket at: 1) key value equals: 1.
	self assert: (aTicket at: 1) value equals: (self defaultCatalog at: self itemSellByTheStore).
	"! !

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:45:20'!
ERROR!
!TestTusLibros methodsFor: 'support' stamp: 'LEB 11/6/2019 16:45:43' prior: 50778971!
expiredCreditCard
	| aCreditCard aMonthOfYear |
	aMonthOfYear := GregorianMonthOfYear year: (GregorianYear number: 1) monthNumber: 1.
	aCreditCard := CreditCard withNumber: 1 expiringOn: aMonthOfYear ownedBy: 'wilkinsen'.
	^aCreditCard.! !

!testRun: #CreditCardTest #test01creditCardIsNotExpiredWhenItsExpirationDateIsGreaterThanAGivenDate stamp: 'LEB 11/6/2019 16:45:57'!
PASSED!

!testRun: #CreditCardTest #test02creditCardIsExpiredWhenTheGivenDateIsGreaterThanExpirationDate stamp: 'LEB 11/6/2019 16:45:57'!
PASSED!

!testRun: #CreditCardTest #test03creditCardIsExpiredWhenTheGivenDateIsEqualThanExpirationDate stamp: 'LEB 11/6/2019 16:45:57'!
PASSED!

!testRun: #CashierTest #test01cannotCheckOutEmptyCart stamp: 'LEB 11/6/2019 16:45:59'!
PASSED!

!testRun: #CashierTest #test02checkingOutACartWithAnItemOnASalesBookReturnsATicketThatIsIncludedOnThatSalesBook stamp: 'LEB 11/6/2019 16:45:59'!
PASSED!

!testRun: #CashierTest #test03checkingOutACartWithAnItemReturnsATicketWithTheItemValue stamp: 'LEB 11/6/2019 16:45:59'!
PASSED!

!testRun: #CashierTest #test04checkingOutACartWithTwoItemsReturnsATicketWithTheSumOfTheItemValues stamp: 'LEB 11/6/2019 16:45:59'!
PASSED!

!testRun: #CashierTest #test05cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/6/2019 16:45:59'!
PASSED!

----SNAPSHOT----(6 November 2019 16:46:03) CuisUniversity-3938.image priorSource: 14277766!