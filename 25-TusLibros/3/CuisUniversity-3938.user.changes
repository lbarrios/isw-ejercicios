

----STARTUP---- (29 October 2019 17:29:29) as /Users/lbarrios/CuisUniversity/3938/CuisUniversity-3938.image!


----End fileIn of /Users/lbarrios/facultad/isw1-notas/ejemplos/DesignPatterns-Proxy.st----!

----End fileIn of /Users/lbarrios/facultad/isw1-notas/ejemplos/DesignPatterns-Adapter.st----!

----End fileIn of /Users/lbarrios/facultad/isw1-notas/ejemplos/DesignPatterns-Decorator.st----!

proveedor := Provider new.!

proveedor addresses.!

proveedor addresses.!

proveedor addresses.!

proveedor addresses!

proveedor addresses!

proveedor addresses!

proveedor addresses!

proveedor addresses value.!

proveedor addresses value.!

proveedor addresses value.!

proveedor addresses value.!

proveedor addresses value.!

proveedor addresses value.!

proveedor addresses value.!
!AddressBook methodsFor: 'nil' stamp: 'LEB 10/29/2019 17:42:36'!
hola
^'hola'.! !

proveedor addresses hola.!

(proveedor addresses) hola.!
!AddressBook class methodsFor: 'querying' stamp: 'LEB 10/29/2019 17:43:55' prior: 50777380!
addressesFor: aCustomer

	^AddressBook new! !

(proveedor addresses) hola.!

proveedor := Provider new.!

(proveedor addresses) hola.!

(proveedor addresses) hola.!

(proveedor addresses) hola.!
!LazyInitProxy methodsFor: 'message handling' stamp: 'LEB 10/29/2019 17:47:30' prior: 50777458!
doesNotUnderstand: aMessage

	"Implementacion con desproxeo de Proxy"
	self value become: self.
	^aMessage sendTo: self
	
	
	"Implementacion de Proxy generico sin desproxeo"
	"
	^aMessage sendTo: self value
	"! !

(proveedor addresses) hola.!

proveedor := Provider new.!

(proveedor addresses) hola.!

(proveedor addresses) hola.!

	connection close.!

	| connection |
	
	connection := TracedConnectionDecorator decorating: TCPConnection new.
	
	connection send: 'Hola'.
	connection send: 'Chau'.
	connection close.!

	| connection |
	
	connection := ZippedConnectionDecorator decorating: (TracedConnectionDecorator decorating: TCPConnection new).
	
	connection send: 'Hola'.
	connection send: 'Chau'.
	connection close.!

AddressBook subclass: #AddressBookProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!

!classDefinition: #AddressBookProxy category: #'DesignPatterns-Proxy' stamp: 'LEB 10/29/2019 19:41:24'!
AddressBook subclass: #AddressBookProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!

AddressBook subclass: #AddressBookSubject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!

!classDefinition: #AddressBookSubject category: #'DesignPatterns-Proxy' stamp: 'LEB 10/29/2019 19:41:28'!
AddressBook subclass: #AddressBookSubject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!
!AddressBook methodsFor: 'as yet unclassified' stamp: 'LEB 10/29/2019 19:41:49' prior: 50778069!
hola
self subclassResponsibility.! !

AddressBook subclass: #AddressBookReal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!

!classDefinition: #AddressBookReal category: #'DesignPatterns-Proxy' stamp: 'LEB 10/29/2019 19:41:55'!
AddressBook subclass: #AddressBookReal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!
!AddressBookReal methodsFor: 'nil' stamp: 'LEB 10/29/2019 19:43:33'!
hola
^'hola'.! !
!AddressBookProxy methodsFor: 'nil' stamp: 'LEB 10/29/2019 19:44:06'!
hola
self value hola! !

!classDefinition: #Provider category: #'DesignPatterns-Proxy' stamp: 'LEB 10/29/2019 19:47:51'!
Object subclass: #Provider
	instanceVariableNames: 'phones adresses poly_addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!
!Provider methodsFor: 'initialization' stamp: 'LEB 10/29/2019 19:47:49' prior: 50777419!
initialize

	phones := LazyInitProxy instantiatingProxeeWith: [ PhoneBook phonesFor: self ].
	adresses := LazyInitProxy instantiatingProxeeWith: [ AddressBook addressesFor: self ].
	
	poly_addresses := AddressBookProxy initialize.! !
!Provider methodsFor: 'initialization' stamp: 'LEB 10/29/2019 19:48:17' prior: 50778167!
initialize

	phones := LazyInitProxy instantiatingProxeeWith: [ PhoneBook phonesFor: self ].
	adresses := LazyInitProxy instantiatingProxeeWith: [ AddressBook addressesFor: self ].
	
	poly_addresses := AddressBookProxy new.! !

poly_addresses := AddressBookProxy new.!

!classDefinition: #AddressBookProxy category: #'DesignPatterns-Proxy' stamp: 'LEB 10/29/2019 19:50:17'!
AddressBook subclass: #AddressBookProxy
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!
!AddressBookProxy methodsFor: 'as yet unclassified' stamp: 'LEB 10/29/2019 19:50:16'!
initialize

value := [AddressBookReal new].! !

!classDefinition: #AddressBookProxy category: #'DesignPatterns-Proxy' stamp: 'LEB 10/29/2019 19:50:44'!
AddressBook subclass: #AddressBookProxy
	instanceVariableNames: 'value initClosure'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DesignPatterns-Proxy'!
!AddressBookProxy methodsFor: 'as yet unclassified' stamp: 'LEB 10/29/2019 19:50:42'!
value

	value isNil ifTrue: [ value := initClosure value].
	^value 
	
	! !
!AddressBookProxy methodsFor: 'as yet unclassified' stamp: 'LEB 10/29/2019 19:50:51' prior: 50778198!
initialize

initClosure := [AddressBookReal new].! !

poly_addresses := AddressBookProxy new.!

poly_addresses hola.!

poly_addresses hola.!
!AddressBookProxy methodsFor: 'as yet unclassified' stamp: 'LEB 10/29/2019 19:51:16' prior: 50778155!
hola
^self value hola! !

poly_addresses := AddressBookProxy new.!

poly_addresses hola.!

poly_addresses hola.!

poly_addresses := AddressBookProxy new.!

poly_addresses!

self value!

self value!
!LazyInitProxy methodsFor: 'message handling' stamp: 'LEB 10/29/2019 19:56:05' prior: 50778085!
doesNotUnderstand: aMessage

	"Implementacion con desproxeo de Proxy"
	"self value become: self.
	^aMessage sendTo: self"
	
	
	"Implementacion de Proxy generico sin desproxeo"
	
	^aMessage sendTo: self value
	! !

	phones := LazyInitProxy instantiatingProxeeWith: [ PhoneBook phonesFor: self ].!

	phones class.!

----STARTUP---- (14 November 2019 17:00:03) as /Users/lbarrios/CuisUniversity/3938/CuisUniversity-3938.image!


----End fileIn of /Users/lbarrios/facultad/isw-ejercicios/25-TusLibros/3/TusLibros.st----!

----STARTUP---- (14 November 2019 17:05:39) as /Users/lbarrios/CuisUniversity/3938/CuisUniversity-3938.image!


----End fileIn of /Users/lbarrios/facultad/isw-ejercicios/25-TusLibros/3/TusLibros.st----!

----SNAPSHOT----(14 November 2019 17:06:04) CuisUniversity-3938.image priorSource: 14319118!

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:15:47'!
PASSED!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:15:47'!
FAILURE!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:15:47'!
FAILURE!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:15:52'!
FAILURE!

clock := ClockMock new.!

clock now!

clock now!

(clock now)!

(clock now) date!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:21:30' prior: 50780011!
checkoutCart: aCartId withCreditCard: aCreditCard 
	| cart cashier today aMerchantProcessor aSalesBook ticket username currentTime |
	
	cart _ carts at: aCartId ifAbsent: [self error: self class invalidCartIdErrorMessage].
	
	currentTime := clock now.
	(currentTime > ((lastUsedTime at: aCartId) + (Duration minutes: 30))) ifTrue: [self error: RestInterface expiredCartErrorMessage].
	
	aSalesBook _ salesBook.
	today _ currentTime date.
	aMerchantProcessor _ merchantProcessor.
	
	cashier _ Cashier for: cart on: aSalesBook with: aCreditCard onDate: today withMerchantProcessor: aMerchantProcessor.
	ticket _ cashier checkOut.
	
	username _ userForCarts at: aCartId.
	purchases at: username put: ((purchases at: username) + (Purchases withItems: (self listCart: aCartId) total: ticket)).
	
	carts removeKey: aCartId.
	^ticket.
	! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:21:40' prior: 50780236!
checkoutCart: aCartId withCreditCard: aCreditCard 
	| cart cashier today aMerchantProcessor aSalesBook ticket username currentTime |
	
	cart _ carts at: aCartId ifAbsent: [self error: self class invalidCartIdErrorMessage].
	
	currentTime := clock now.
	(currentTime > ((lastUsedTime at: aCartId) + (Duration minutes: 30))) ifTrue: [self error: RestInterface expiredCartErrorMessage].
	
	aSalesBook _ salesBook.
	today _ currentTime date.
	aMerchantProcessor _ merchantProcessor.
	
	cashier _ Cashier for: cart on: aSalesBook with: aCreditCard onDate: currentTime date withMerchantProcessor: aMerchantProcessor.
	ticket _ cashier checkOut.
	
	username _ userForCarts at: aCartId.
	purchases at: username put: ((purchases at: username) + (Purchases withItems: (self listCart: aCartId) total: ticket)).
	
	carts removeKey: aCartId.
	^ticket.
	! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:21:47' prior: 50780266!
checkoutCart: aCartId withCreditCard: aCreditCard 
	| cart cashier aMerchantProcessor aSalesBook ticket username currentTime |
	
	cart _ carts at: aCartId ifAbsent: [self error: self class invalidCartIdErrorMessage].
	
	currentTime := clock now.
	(currentTime > ((lastUsedTime at: aCartId) + (Duration minutes: 30))) ifTrue: [self error: RestInterface expiredCartErrorMessage].
	
	aSalesBook _ salesBook.
	aMerchantProcessor _ merchantProcessor.
	
	cashier _ Cashier for: cart on: aSalesBook with: aCreditCard onDate: currentTime date withMerchantProcessor: aMerchantProcessor.
	ticket _ cashier checkOut.
	
	username _ userForCarts at: aCartId.
	purchases at: username put: ((purchases at: username) + (Purchases withItems: (self listCart: aCartId) total: ticket)).
	
	carts removeKey: aCartId.
	^ticket.
	! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:22:00' prior: 50780296!
checkoutCart: aCartId withCreditCard: aCreditCard 
	| cart cashier ticket username currentTime |
	
	cart _ carts at: aCartId ifAbsent: [self error: self class invalidCartIdErrorMessage].
	
	currentTime := clock now.
	(currentTime > ((lastUsedTime at: aCartId) + (Duration minutes: 30))) ifTrue: [self error: RestInterface expiredCartErrorMessage].
	
	cashier _ Cashier for: cart on: salesBook with: aCreditCard onDate: currentTime date withMerchantProcessor: merchantProcessor.
	ticket _ cashier checkOut.
	
	username _ userForCarts at: aCartId.
	purchases at: username put: ((purchases at: username) + (Purchases withItems: (self listCart: aCartId) total: ticket)).
	
	carts removeKey: aCartId.
	^ticket.
	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:22:06'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:22:06'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:22:06'!
ERROR!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:22:06'!
ERROR!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:22:06'!
ERROR!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:22:06'!
PASSED!

Clock subclass: #FixedClock
	instanceVariableNames: 'time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #FixedClock category: #TusLibros stamp: 'LEB 11/14/2019 17:23:26'!
Clock subclass: #FixedClock
	instanceVariableNames: 'time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #FixedClock stamp: 'LEB 11/14/2019 17:23:57'!
Clock subclass: #FixedClock
	instanceVariableNames: 'time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:24:03' prior: 50779394!
test09cannotCheckoutIfMerchantProcessorFails

| interface cartId |
interface _ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook 
withMerchantProcessor: (MerchantProcessorMOCK with: [self error.]) withClock: FixedClock new.

cartId _ interface createCartForClientId: self username1 identifiedByPassword: self passwordForUsername1.
interface addToCart: cartId isbn: (self itemSellByTheStore) quantity: 5.

self 
	should: [interface checkoutCart: cartId withCreditCard: self validCreditCard.]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface merchantProcessorErrorMessage.
	]! !
!TestTusLibros methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:24:03' prior: 50778801!
defaultRestInterface
	
	^ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: FixedClock new.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:24:03' prior: 50779588!
test16cannotListCartAfter30MinutesOfInactivity

| interface cartId clock |

clock _ FixedClock new.
interface _ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: clock.

cartId _ interface createCartForClientId: self username1 identifiedByPassword: self passwordForUsername1.
clock addTime: (Duration minutes: 31).
self 
	should: [interface listCart: cartId.]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface expiredCartErrorMessage.
	]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:24:03' prior: 50779563!
test15cannotAddToCartAfter30MinutesOfInactivity

| interface cartId clock |

clock _ FixedClock new.
interface _ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: clock.

cartId _ interface createCartForClientId: self username1 identifiedByPassword: self passwordForUsername1.
clock addTime: (Duration minutes: 31).

self 
	should: [interface addToCart: cartId isbn: (self itemSellByTheStore) quantity: 5.]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface expiredCartErrorMessage.
	]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:24:03' prior: 50779611!
test17cannotCheckOutCartAfter30MinutesOfInactivity

| interface cartId clock salesBook |

clock _ FixedClock new.
salesBook _ self defaultSalesBook.
interface _ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: salesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: clock.

cartId _ interface createCartForClientId: self username1 identifiedByPassword: self passwordForUsername1.
interface addToCart: cartId isbn: (self itemSellByTheStore) quantity: 5.
clock addTime: (Duration minutes: 31).
self 
	should: [interface checkoutCart: cartId withCreditCard: self validCreditCard.]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface expiredCartErrorMessage.
		self assert: salesBook isEmpty.
	]! !
!FixedClock methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:25:26'!
initializeWith: aDate

time _ aDate.! !

!methodRemoval: FixedClock #initialize stamp: 'LEB 11/14/2019 17:25:30'!
initialize

time _ DateAndTime now.!
!FixedClock class methodsFor: 'nil' stamp: 'LEB 11/14/2019 17:26:20'!
with: initialDate
^self new initializeWith: initialDate.! !
!TestTusLibros methodsFor: 'support' stamp: 'LEB 11/14/2019 17:26:58' prior: 50780458!
defaultRestInterface
	
	^ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: (FixedClock with: DateAndTime now).! !

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:27:04'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:27:13'!
ERROR!

GregorianDate newFrom: (clock now).!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:28:08' prior: 50780325!
checkoutCart: aCartId withCreditCard: aCreditCard 
	| cart cashier ticket username currentTime |
	
	cart _ carts at: aCartId ifAbsent: [self error: self class invalidCartIdErrorMessage].
	
	currentTime := clock now.
	(currentTime > ((lastUsedTime at: aCartId) + (Duration minutes: 30))) ifTrue: [self error: RestInterface expiredCartErrorMessage].
	
	cashier _ Cashier for: cart on: salesBook with: aCreditCard onDate: (GregorianDate newFrom: currentTime) withMerchantProcessor: merchantProcessor.
	ticket _ cashier checkOut.
	
	username _ userForCarts at: aCartId.
	purchases at: username put: ((purchases at: username) + (Purchases withItems: (self listCart: aCartId) total: ticket)).
	
	carts removeKey: aCartId.
	^ticket.
	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:28:22'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:28:22'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:28:22'!
ERROR!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:28:22'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:28:22'!
ERROR!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:28:22'!
ERROR!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:28:22'!
ERROR!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:28:22'!
ERROR!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:28:22'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:28:24'!
ERROR!

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:28:53'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:28:53'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:28:53'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:28:53'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:28:53'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:28:53'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:28:54'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:28:54'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:28:54'!
ERROR!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:28:54'!
ERROR!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:28:54'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:28:54'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:28:54'!
ERROR!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:28:54'!
ERROR!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:28:54'!
ERROR!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:28:54'!
ERROR!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:28:54'!
ERROR!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:28:56'!
ERROR!
!TestTusLibros methodsFor: 'support' stamp: 'LEB 11/14/2019 17:30:28'!
defaultClock
! !
!TestTusLibros methodsFor: 'support' stamp: 'LEB 11/14/2019 17:30:39' prior: 50780559!
defaultRestInterface
	
	^ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: self defaultClock.! !
!TestTusLibros methodsFor: 'support' stamp: 'LEB 11/14/2019 17:31:09' prior: 50780805!
defaultClock
^FixedClock with: DateAndTime now! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:31:24' prior: 50780432!
test09cannotCheckoutIfMerchantProcessorFails

| interface cartId |
interface _ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook 
withMerchantProcessor: (MerchantProcessorMOCK with: [self error.]) withClock: self defaultClock.

cartId _ interface createCartForClientId: self username1 identifiedByPassword: self passwordForUsername1.
interface addToCart: cartId isbn: (self itemSellByTheStore) quantity: 5.

self 
	should: [interface checkoutCart: cartId withCreditCard: self validCreditCard.]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface merchantProcessorErrorMessage.
	]! !

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:31:25'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:31:25'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:31:30'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:31:30'!
FAILURE!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:33:00'!
FAILURE!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:33:00'!
FAILURE!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:33:03'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:33:07'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:33:07'!
FAILURE!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:33:07'!
ERROR!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:33:07'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:33:07'!
ERROR!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:33:07'!
ERROR!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:33:07'!
ERROR!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:33:07'!
ERROR!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:33:07'!
ERROR!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:33:15'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:33:17'!
FAILURE!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:33:17'!
FAILURE!

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:33:21'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:33:21'!
FAILURE!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:33:21'!
ERROR!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:33:21'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:33:21'!
ERROR!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:33:21'!
ERROR!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:33:21'!
ERROR!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:33:21'!
ERROR!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:33:21'!
ERROR!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:34:21' prior: 50780643!
checkoutCart: aCartId withCreditCard: aCreditCard 
	| cart cashier ticket username currentTime |
	
	cart _ carts at: aCartId ifAbsent: [self error: self class invalidCartIdErrorMessage].
	
	currentTime := clock now.
	(currentTime > ((lastUsedTime at: aCartId) + (Duration minutes: 30))) ifTrue: [self error: RestInterface expiredCartErrorMessage].
	
	cashier _ Cashier for: cart on: salesBook with: aCreditCard onDate: (GregorianDate newFrom: currentTime date) withMerchantProcessor: merchantProcessor.
	ticket _ cashier checkOut.
	
	username _ userForCarts at: aCartId.
	purchases at: username put: ((purchases at: username) + (Purchases withItems: (self listCart: aCartId) total: ticket)).
	
	carts removeKey: aCartId.
	^ticket.
	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:34:23'!
FAILURE!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:34:23'!
FAILURE!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:34:23'!
ERROR!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:34:23'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:34:23'!
ERROR!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:34:23'!
ERROR!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:34:23'!
ERROR!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:34:23'!
ERROR!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:34:23'!
ERROR!

d := GregorianDate newFrom: (clock now).!

d day!

d := FixedGregorianDate newFrom: (clock now).!

d := FixedGregorianDate newFrom: (clock now date).!

d := FixedGregorianDate new: (clock now date).!

clock now dateAndTime.!

clock now.!

clock := FixedClock new.!

clock now.!

clock now.!

clock := FixedClock with: DateAndTime now.!

clock now.!

clock now.!

clock now.!

clock now.!

clock now.!

d := FixedGregorianDate newFrom: (clock now dateAndTime).!

d := FixedGregorianDate newFrom: (clock now date).!

d := FixedGregorianDate newFrom: (clock now).!

date := clock now date.!

date month !

d := FixedGregorianDate newFrom: (clock now).!

d := FixedGregorianDate newFrom: (clock now).!

date := clock now date.!

d := clock now date.!

FixedGregorianDate fromDate: d.!

fgd := FixedGregorianDate fromDate: d.!

d day!

fgd day!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:38:29' prior: 50781017!
checkoutCart: aCartId withCreditCard: aCreditCard 
	| cart cashier ticket username currentTime |
	
	cart _ carts at: aCartId ifAbsent: [self error: self class invalidCartIdErrorMessage].
	
	currentTime := clock now.
	(currentTime > ((lastUsedTime at: aCartId) + (Duration minutes: 30))) ifTrue: [self error: RestInterface expiredCartErrorMessage].
	
	cashier _ Cashier for: cart on: salesBook with: aCreditCard onDate: (FixedGregorianDate fromDate: currentTime date) withMerchantProcessor: merchantProcessor.
	ticket _ cashier checkOut.
	
	username _ userForCarts at: aCartId.
	purchases at: username put: ((purchases at: username) + (Purchases withItems: (self listCart: aCartId) total: ticket)).
	
	carts removeKey: aCartId.
	^ticket.
	! !

d := clock now.!

FixedGregorianDate fromDate: d.!

fgd := FixedGregorianDate fromDate: d.!

fgd day!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:38:43' prior: 50781134!
checkoutCart: aCartId withCreditCard: aCreditCard 
	| cart cashier ticket username currentTime |
	
	cart _ carts at: aCartId ifAbsent: [self error: self class invalidCartIdErrorMessage].
	
	currentTime := clock now.
	(currentTime > ((lastUsedTime at: aCartId) + (Duration minutes: 30))) ifTrue: [self error: RestInterface expiredCartErrorMessage].
	
	cashier _ Cashier for: cart on: salesBook with: aCreditCard onDate: (FixedGregorianDate fromDate: currentTime) withMerchantProcessor: merchantProcessor.
	ticket _ cashier checkOut.
	
	username _ userForCarts at: aCartId.
	purchases at: username put: ((purchases at: username) + (Purchases withItems: (self listCart: aCartId) total: ticket)).
	
	carts removeKey: aCartId.
	^ticket.
	! !

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:38:56'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:38:56'!
ERROR!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:38:56'!
ERROR!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:38:56'!
ERROR!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:39:23' prior: 50780493!
test15cannotAddToCartAfter30MinutesOfInactivity

| interface cartId clock |

clock _ self defaultClock.
interface _ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: clock.

cartId _ interface createCartForClientId: self username1 identifiedByPassword: self passwordForUsername1.
clock addTime: (Duration minutes: 31).

self 
	should: [interface addToCart: cartId isbn: (self itemSellByTheStore) quantity: 5.]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface expiredCartErrorMessage.
	]! !

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:39:25'!
ERROR!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:39:38' prior: 50780469!
test16cannotListCartAfter30MinutesOfInactivity

| interface cartId clock |

clock _ self defaultClock.
interface _ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: self defaultSalesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: clock.

cartId _ interface createCartForClientId: self username1 identifiedByPassword: self passwordForUsername1.
clock addTime: (Duration minutes: 31).
self 
	should: [interface listCart: cartId.]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface expiredCartErrorMessage.
	]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'LEB 11/14/2019 17:39:42' prior: 50780518!
test17cannotCheckOutCartAfter30MinutesOfInactivity

| interface cartId clock salesBook |

clock _ self defaultClock.
salesBook _ self defaultSalesBook.
interface _ RestInterface withCatalog: self defaultCatalog withCredentials: self defaultCredentials withSalesBook: salesBook withMerchantProcessor: self alwaysOKMerchantProcessor withClock: clock.

cartId _ interface createCartForClientId: self username1 identifiedByPassword: self passwordForUsername1.
interface addToCart: cartId isbn: (self itemSellByTheStore) quantity: 5.
clock addTime: (Duration minutes: 31).
self 
	should: [interface checkoutCart: cartId withCreditCard: self validCreditCard.]
	raise: Error - MessageNotUnderstood
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface expiredCartErrorMessage.
		self assert: salesBook isEmpty.
	]! !

!testRun: #RestInterfaceTest #test01cannotCreateCartWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test02listCartOfAJustCreatedCartIsEmpty stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test03cannotListCartForAnInvalidCartId stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test04listingACartAfterAddingAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test05cannotAddToAnInvalidIdCart stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test06cannotCheckoutOnAnInvalidIdCart stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test07cannotCheckoutWithAnEmptyCart stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test08cannotCheckoutWithAnExpiredCreditCard stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test09cannotCheckoutIfMerchantProcessorFails stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test10cannotUseCartAfterCheckout stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test11listingPurchasesOfANewUserIsEmpty stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test12cannotListPurchasesWithInvalidUserCredencials stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test13listingPurchasesAfterCheckingOutACartWithAnItemContainsThatItem stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test14listingManyPurchasesAfterCheckingOutManyCartsWithManyItemsWithMultipleUsersContainsAllThoseItemsForEachUser stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test15cannotAddToCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test16cannotListCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

!testRun: #RestInterfaceTest #test17cannotCheckOutCartAfter30MinutesOfInactivity stamp: 'LEB 11/14/2019 17:39:46'!
PASSED!

----SNAPSHOT----(14 November 2019 17:39:52) CuisUniversity-3938.image priorSource: 14352197!